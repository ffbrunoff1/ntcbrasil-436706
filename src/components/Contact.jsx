import React, { useState } from 'react';import { motion } from 'framer-motion';import { Phone, Mail, MapPin, Send } from 'lucide-react';export default function Contact() {  const [formData, setFormData] = useState({ name: '', email: '', message: '' });  const [status, setStatus] = useState('');  const handleChange = (e) => {    setFormData({ ...formData, [e.target.name]: e.target.value });  };  const handleSubmit = (e) => {    e.preventDefault();    setStatus('Enviando...');    // Simulação de envio    setTimeout(() => {      if (formData.name && formData.email && formData.message) {        setStatus('Mensagem enviada com sucesso!');        setFormData({ name: '', email: '', message: '' });      } else {        setStatus('Por favor, preencha todos os campos.');      }      setTimeout(() => setStatus(''), 3000);    }, 1500);  };  const containerVariants = {    hidden: { opacity: 0 },    visible: { opacity: 1, transition: { staggerChildren: 0.3 } }  };  const itemVariants = {    hidden: { y: 20, opacity: 0 },    visible: { y: 0, opacity: 1, transition: { type: 'spring' } }  };  return (    <section id="contact" className="section-padding bg-light">      <motion.div         className="container mx-auto"        variants={containerVariants}        initial="hidden"        whileInView="visible"        viewport={{ once: true, amount: 0.2 }}      >        <div className="text-center mb-16">          <motion.h2 variants={itemVariants} className="text-3xl md:text-4xl font-extrabold text-dark mb-4">            Vamos construir <span className="text-gradient">algo incrível juntos</span>          </motion.h2>          <motion.p variants={itemVariants} className="max-w-3xl mx-auto text-lg text-dark/70">            Tem uma ideia ou um projeto em mente? Entre em contato conosco. Estamos prontos para ouvir e transformar sua visão em um projeto de sucesso.          </motion.p>        </div>        <div className="grid lg:grid-cols-2 gap-12">          <motion.div variants={itemVariants} className="space-y-8">            <div className="flex items-start space-x-4">              <div className="bg-primary/10 text-primary p-4 rounded-lg">                <Phone size={24} />              </div>              <div>                <h3 className="text-lg font-semibold text-secondary">Telefone</h3>                <a href="tel:+5544991040774" className="text-dark/80 hover:text-primary">+55 44 99104-0774</a>              </div>            </div>            <div className="flex items-start space-x-4">              <div className="bg-primary/10 text-primary p-4 rounded-lg">                <Mail size={24} />              </div>              <div>                <h3 className="text-lg font-semibold text-secondary">E-mail</h3>                <a href="mailto:ffbrunoff@yahoo.com.br" className="text-dark/80 hover:text-primary">ffbrunoff@yahoo.com.br</a>              </div>            </div>            <div className="flex items-start space-x-4">              <div className="bg-primary/10 text-primary p-4 rounded-lg">                <MapPin size={24} />              </div>              <div>                <h3 className="text-lg font-semibold text-secondary">Endereço</h3>                <p className="text-dark/80">Padre Lebret, 801, G05 Bloco 03</p>              </div>            </div>          </motion.div>          <motion.form             variants={itemVariants}             onSubmit={handleSubmit}            className="space-y-6"          >            <div>              <label htmlFor="name" className="block text-sm font-medium text-dark/80 mb-1">Nome</label>              <input type="text" name="name" id="name" value={formData.name} onChange={handleChange} className="w-full px-4 py-3 bg-background rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary transition" required />            </div>            <div>              <label htmlFor="email" className="block text-sm font-medium text-dark/80 mb-1">E-mail</label>              <input type="email" name="email" id="email" value={formData.email} onChange={handleChange} className="w-full px-4 py-3 bg-background rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary transition" required />            </div>            <div>              <label htmlFor="message" className="block text-sm font-medium text-dark/80 mb-1">Mensagem</label>              <textarea name="message" id="message" rows="5" value={formData.message} onChange={handleChange} className="w-full px-4 py-3 bg-background rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary transition" required></textarea>            </div>            <div className="flex items-center justify-between">              <button type="submit" className="btn btn-secondary inline-flex items-center gap-2">                Enviar Mensagem <Send size={18} />              </button>              {status && <p className="text-sm text-dark/70">{status}</p>}            </div>          </motion.form>        </div>      </motion.div>    </section>  );}